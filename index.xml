<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Netcom Developer&#39;s Backing</title>
    <link>http://takaishota.github.io/DevelopersBacking/</link>
    <description>Recent content on Netcom Developer&#39;s Backing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 18 Sep 2015 17:57:25 +0900</lastBuildDate>
    <atom:link href="http://takaishota.github.io/DevelopersBacking/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Netcom Developer&#39;s Backing #6のまとめ</title>
      <link>http://takaishota.github.io/DevelopersBacking/post/20150918/</link>
      <pubDate>Fri, 18 Sep 2015 17:57:25 +0900</pubDate>
      
      <guid>http://takaishota.github.io/DevelopersBacking/post/20150918/</guid>
      <description>

&lt;p&gt;9/18（金）にNetcom Developer&amp;rsquo;s Backing #6を行いました。&lt;/p&gt;

&lt;h1 id=&#34;ios9の新機能について:dc23a03c468a971622ed612b653b3171&#34;&gt;iOS9の新機能について&lt;/h1&gt;

&lt;h2 id=&#34;search-apisについて:dc23a03c468a971622ed612b653b3171&#34;&gt;Search APIsについて&lt;/h2&gt;

&lt;p&gt;以下の3つの要素で構成されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;NSUserActivity&lt;/li&gt;
&lt;li&gt;CoreSpotlight&lt;/li&gt;
&lt;li&gt;Web Markup&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ios側での対応:dc23a03c468a971622ed612b653b3171&#34;&gt;iOS側での対応&lt;/h3&gt;

&lt;h4 id=&#34;nsuseractivity-ユーザ端末内-他の端末にも:dc23a03c468a971622ed612b653b3171&#34;&gt;NSUserActivity（ユーザ端末内/他の端末にも）&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;ユーザーがアプリ内で閲覧したコンテンツ（のみ）をindexして、SpotlightやSafariの検索バーから検索することができるようにする機能&lt;/li&gt;

&lt;li&gt;&lt;p&gt;デバイス内だけでなく、アプリをインストールしていないユーザーのSpotlightやSafariの検索バーにも、コンテンツを表示することができる&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;実装&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;// NSUserActivity
var activity:NSUserActivity = NSUserActivity(activityType: “com.yummly.browseRecipe“)


activity.title = &amp;quot;Baked Potato Chips&amp;quot;
activity.keywords = Set&amp;lt;String&amp;gt;(arrayLiteral: &amp;quot;dog&amp;quot;, &amp;quot;cat&amp;quot;, &amp;quot;pig&amp;quot;, &amp;quot;sheep&amp;quot;)
activity.userInfo =  [&amp;quot;id&amp;quot;: &amp;quot;http://www.yummly.com/recipe/BPC-983195&amp;quot;]
activity.eligibleForSearch = true
activity.becomeCurrent()
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Spotlightでタップ&lt;br /&gt;
appDelegateでapplication:continueUserActivity:restorationHandler:メソッドが呼ばれる&lt;br /&gt;
-&amp;gt; このとき、何をするか、
-&amp;gt; WWDC2015のスライドには
// Restore state for userActivity and userInfo
とある。（まだよくわかってない）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Cloud Indexへの登録
eligibleForPublicIndexingをYESにする&lt;br /&gt;
-&amp;gt; キーワードに対して人気が高いアプリと認識されると、アプリをインストールしていないユーザにも検索結果を表示できる
&lt;img src=&#34;img/20150618190808.png&#34; alt=&#34;wwdc&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;corespotlight-ユーザ端末内のみ:dc23a03c468a971622ed612b653b3171&#34;&gt;CoreSpotlight（ユーザ端末内のみ）&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Spotlightに表示させるコンテンツを追加、更新する機能&lt;/li&gt;
&lt;li&gt;ユーザーの閲覧したコンテンツだけでなく、アプリ内の任意のコンテンツを検索させることができる&lt;/li&gt;

&lt;li&gt;&lt;p&gt;NSUserActivityとの違いがよく分からない&lt;br /&gt;
-&amp;gt; WWDCのスライドでは
   CSSearchableIndexを add, update, and deleteできる
   Used by Messages, Mail, Calendar, and Notes&lt;br /&gt;
   ということだが、、、
-&amp;gt; もう少し調べてみる
  &lt;a href=&#34;https://www.hackingwithswift.com/read/32/4/how-to-add-core-spotlight-to-index-your-app-content&#34;&gt;https://www.hackingwithswift.com/read/32/4/how-to-add-core-spotlight-to-index-your-app-content&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;img/20150618190711-1.png&#34; alt=&#34;wwdc&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;実装&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  // Core Spotlight
  let attributeSet = CSSearchableItemAttributeSet(itemContentType: kUTTypeImage as String)
  attributeSet.title = &amp;quot;iOS-9-Sampler_CoreSpotlight&amp;quot;
  attributeSet.contentDescription = &amp;quot;iOS-9-Sampler is a code example collection for new features of iOS 9.&amp;quot;
  attributeSet.keywords = [&amp;quot;dog&amp;quot;, &amp;quot;cat&amp;quot;, &amp;quot;bird&amp;quot;, &amp;quot;fish&amp;quot;]
  let image = UIImage(named: &amp;quot;m7&amp;quot;)!
  let data = UIImagePNGRepresentation(image)
  attributeSet.thumbnailData = data

  let searchableItem = CSSearchableItem(
      uniqueIdentifier: uniqueIdentifier,
      domainIdentifier: domainIdentifier,
      attributeSet: attributeSet)

  CSSearchableIndex.defaultSearchableIndex().indexSearchableItems([searchableItem]) { (error) -&amp;gt; Void in
      if error != nil {
          print(&amp;quot;failed with error:\(error)\n&amp;quot;)
      }
      else {
          print(&amp;quot;Indexed!\n&amp;quot;)
      }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;webページ側での対応:dc23a03c468a971622ed612b653b3171&#34;&gt;Webページ側での対応&lt;/h3&gt;

&lt;h4 id=&#34;web-markup:dc23a03c468a971622ed612b653b3171&#34;&gt;Web Markup&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Universal Linkやメタ情報をAppleのクロールがインデックスできる仕様で記載する&lt;/li&gt;
&lt;li&gt;Smart App Banners&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Open Graph または schema.org で定義されているフォーマットで詳細情報を追加する&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;チェックツール
&lt;a href=&#34;https://search.developer.apple.com/appsearch-validation-tool/&#34;&gt;https://search.developer.apple.com/appsearch-validation-tool/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;具体的な実装はこちらの記事を参考にすると良さそうです-あと-ios-9-sampler:dc23a03c468a971622ed612b653b3171&#34;&gt;具体的な実装はこちらの記事を参考にすると良さそうです。あと、iOS-9-Sampler。&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://nsblogger.hatenablog.com/entry/2015/06/18/ios9_core_spotlight&#34;&gt;http://nsblogger.hatenablog.com/entry/2015/06/18/ios9_core_spotlight&lt;/a&gt;
&lt;a href=&#34;http://ameblo.jp/ca-1pixel/entry-12047222782.html&#34;&gt;http://ameblo.jp/ca-1pixel/entry-12047222782.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;他に気になるのは:dc23a03c468a971622ed612b653b3171&#34;&gt;他に気になるのは&lt;/h2&gt;

&lt;h3 id=&#34;multitasking-enhancements-for-ipad:dc23a03c468a971622ed612b653b3171&#34;&gt;Multitasking Enhancements for iPad&lt;/h3&gt;

&lt;p&gt;-&amp;gt; まだ調べてない&lt;/p&gt;

&lt;h3 id=&#34;3d-touch:dc23a03c468a971622ed612b653b3171&#34;&gt;3D Touch&lt;/h3&gt;

&lt;p&gt;-&amp;gt; これは先日のPotatotips#21で発表してた人がいた（まだシュミレーターで試せないそう、、、）&lt;/p&gt;

&lt;h3 id=&#34;watch-connectivity:dc23a03c468a971622ed612b653b3171&#34;&gt;Watch Connectivity&lt;/h3&gt;

&lt;p&gt;-&amp;gt;　これは、今サンプルアプリを作成中（証券会社のお気に入り銘柄を表示するアプリ）&lt;/p&gt;

&lt;h2 id=&#34;恒例のios-9-sampler:dc23a03c468a971622ed612b653b3171&#34;&gt;恒例のiOS-9-Sampler&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/shu223/iOS-9-Sampler&#34;&gt;https://github.com/shu223/iOS-9-Sampler&lt;/a&gt;
* Text Detector
* UIStackView&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;次回は2週間後の 10/2（金）に開催予定です。&lt;/p&gt;

&lt;p&gt;（高井）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>potatotips#21（iOS・Android開発Tips共有会）のまとめ</title>
      <link>http://takaishota.github.io/DevelopersBacking/post/potatotips21/</link>
      <pubDate>Wed, 16 Sep 2015 20:50:30 +0900</pubDate>
      
      <guid>http://takaishota.github.io/DevelopersBacking/post/potatotips21/</guid>
      <description>

&lt;p&gt;9/16にpotatotips#21（iOS/Android開発Tips共有会）にブログまとめ枠で参加しました。&lt;/p&gt;

&lt;h1 id=&#34;第21回-potatotips-ios-android開発tips共有会-のまとめ:570477c102d4483d5e151b36959a9047&#34;&gt;【第21回】potatotips(iOS/Android開発Tips共有会)のまとめ&lt;/h1&gt;

&lt;p&gt;今回の主催者のブログに当日のパワポがまとまっています。&lt;br /&gt;
&lt;a href=&#34;http://tech.recruit-mp.co.jp/event/potatotips-21/&#34;&gt;http://tech.recruit-mp.co.jp/event/potatotips-21/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;あと、アジェンダなどはこちらに記載されています。&lt;br /&gt;
&lt;a href=&#34;https://github.com/potatotips/potatotips/wiki/potatotips-21&#34;&gt;https://github.com/potatotips/potatotips/wiki/potatotips-21&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;気になった発表-ios中心です:570477c102d4483d5e151b36959a9047&#34;&gt;気になった発表（iOS中心です）&lt;/h2&gt;

&lt;h3 id=&#34;3d-touch-on-iphone-ios:570477c102d4483d5e151b36959a9047&#34;&gt;3D Touch on iPhone (iOS)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;シュミレーターで3Dタッチ機能が動かなかったので動作確認はできてない&lt;/p&gt;

&lt;h4 id=&#34;whta-is-3d-touch:570477c102d4483d5e151b36959a9047&#34;&gt;Whta is 3D touch?&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;iOS9で導入された感圧機能を使った新しい機能&lt;/li&gt;
&lt;li&gt;対応端末はiPhone6S/iPhone6S,plus&lt;/li&gt;
&lt;li&gt;一部の機能は9.1からだが、ほとんどは9.0で実装できる&lt;/li&gt;
&lt;li&gt;Pressure Sensitivity・Quick Actions・Peek and Popという3つのインタラクションが追加された&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;img/pressure-sensitivity.jpg&#34; alt=&#34;3DTouch&#34; /&gt;&lt;img src=&#34;img/quick-actions.jpg&#34; alt=&#34;3DTouch3&#34; /&gt;&lt;img src=&#34;img/peek-and-pop.jpg&#34; alt=&#34;3DTouch3&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;pressure-sensitivity:570477c102d4483d5e151b36959a9047&#34;&gt;Pressure Sensitivity&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;タッチの圧力を判定&lt;/li&gt;
&lt;li&gt;UITouchクラスに追加されているforce(CGFLoat)プロパティを判定する&lt;/li&gt;
&lt;li&gt;iOS9.1からはUITouchクラスにスタイラスの角度取得のプロパティも追加される予定&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;quick-actions:570477c102d4483d5e151b36959a9047&#34;&gt;Quick Actions&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;ホームアプリアイコンの押下時にメニューが表示できる&lt;/li&gt;
&lt;li&gt;static quick action

&lt;ul&gt;
&lt;li&gt;info.plistで実装&lt;/li&gt;
&lt;li&gt;表示できる数には限りがある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;dynamic quick action

&lt;ul&gt;
&lt;li&gt;コードで実装&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;アクションがタップされた時はAppDelegateのデリゲートメソッドで取得できる&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;peek-and-pop:570477c102d4483d5e151b36959a9047&#34;&gt;Peek and pop&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;次の画面を出す前にチラ見（Peek）できる&lt;/li&gt;
&lt;li&gt;インタラクションの流れ

&lt;ol&gt;
&lt;li&gt;特定のエリアを軽く押す(Peek)&lt;/li&gt;
&lt;li&gt;Peek画面が表示される（押すのをやめると元の画面に戻る）&lt;/li&gt;
&lt;li&gt;さらに強く押す(Pop)とPeek画面が大きくなり、目的のview画面 となる&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;実装

&lt;ol&gt;
&lt;li&gt;peekのviewを指定して、UIViewControllerPreviewingDelegateを設定する&lt;/li&gt;
&lt;li&gt;peekアクション時、popアクション時の各デリゲートメソッドで表示サイズの処理などを行う&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;UIWebViewやMKWebViewでは、すでに実装されている。allowsLinkPreviewをtrueにすると使えるようになります。（デフォルトはfalse）&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/4YvSUYs1kauGqL&#34; width=&#34;425&#34; height=&#34;355&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/toyship/3d-touch-for-ios&#34; title=&#34;3D touch for iOS&#34; target=&#34;_blank&#34;&gt;3D touch for iOS&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/toyship&#34; target=&#34;_blank&#34;&gt;toyship&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&#34;バグのことは嫌いになってもxcodeのことは嫌いにならないでください-ios:570477c102d4483d5e151b36959a9047&#34;&gt;バグのことは嫌いになってもXcodeのことは嫌いにならないでください。 (iOS)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;XcodeでのデバッグについてのTips&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;xcodeでデバッグ時のtips:570477c102d4483d5e151b36959a9047&#34;&gt;Xcodeでデバッグ時のTips&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;いつもクラッシュしたときにAppDelegateで止まる&lt;br /&gt;
-&amp;gt; 全ての例外発生時を対象ににブレイクポイントを設定し、ブレイクポイント発生時にActionを指定する(po $arg1)&lt;br /&gt;
-&amp;gt; ええ感じのところで止まり、ええ感じの出力&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;AutoLayout制約でのエラー&lt;br /&gt;
-&amp;gt; シンボリックブレイクポイントを設定する&lt;br /&gt;
-&amp;gt; 制約矛盾が発生した段階でブレイクし、viewの階層表示ができて分かりやすい&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/s3t9kpzwSz9Gq&#34; width=&#34;425&#34; height=&#34;355&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/daisukeyamashita180/21-potatotips-yamashita&#34; title=&#34;バグのことは嫌いになってもXcodeのことは嫌いにならないでください。&#34; target=&#34;_blank&#34;&gt;バグのことは嫌いになってもXcodeのことは嫌いにならないでください。&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/daisukeyamashita180&#34; target=&#34;_blank&#34;&gt;Daisuke Yamashita&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&#34;create-layouts-with-the-wearable-ui-library-android:570477c102d4483d5e151b36959a9047&#34;&gt;Create Layouts with the Wearable UI Library (Android)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Android WearはUIコントロールたくさんあるんだなー（Apple Watchは超少ないのでうらやましい） #potatotips（当日のツイート）&lt;br /&gt;
-&amp;gt; 同感です。Android WearのWearable UI Libraryの各UIを紹介されていました。&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;aa082aa7e2e9403284ffd04518ccca99&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;以下は-興味ありましたが遅れて見れませんでした:570477c102d4483d5e151b36959a9047&#34;&gt;（以下は、興味ありましたが遅れて見れませんでした、、、）&lt;/h2&gt;

&lt;h3 id=&#34;swift-compile-time-is-so-slow-ios:570477c102d4483d5e151b36959a9047&#34;&gt;Swift compile time is so slow (iOS)&lt;/h3&gt;

&lt;p&gt;-&amp;gt; Swiftのコンパイルが遅いのでソースファイルを一つにまとめてビルドしてみたらコンパイル時間が大幅に短縮された話&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;5f3f2e3432c94ee0a7a2e31231a61625&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;apple-watch-tips-ios:570477c102d4483d5e151b36959a9047&#34;&gt;Apple Watch Tips (iOS)&lt;/h3&gt;

&lt;p&gt;-&amp;gt; 画像のローディング時の工夫について&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;f845ef2cc00846b4a47deb1aa444baab&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;感想:570477c102d4483d5e151b36959a9047&#34;&gt;感想&lt;/h2&gt;

&lt;p&gt;主催者によるのかもしれませんが、前回参加したときよりゆるい雰囲気でしたw&lt;br /&gt;
それと、前回参加してから半年ぐらいは経っていると思いますが、Androidの割合がかなり増えているようでした。&lt;/p&gt;

&lt;p&gt;直近の新機能について発表されていたのは、iPhone6Sから搭載される3Dタッチのみで、
まだ端末が出ていない上にシュミレーターでも動かなかったということでしたが、
発表をきいている限りでは、これまでの長押しで提供できたインタラクションとそんなに変わらないんじゃないかと思いました。&lt;/p&gt;

&lt;p&gt;次回以降tvOSとか、watchOS2とか、SearchAPIsとかについての実装例とかありそうでおもしろそうです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Netcom Developer&#39;s Backing #5のまとめ</title>
      <link>http://takaishota.github.io/DevelopersBacking/post/20150828/</link>
      <pubDate>Fri, 28 Aug 2015 19:38:34 +0900</pubDate>
      
      <guid>http://takaishota.github.io/DevelopersBacking/post/20150828/</guid>
      <description>

&lt;p&gt;8/28（金）にNetcom Developer&amp;rsquo;s Backing #5を行いました。&lt;/p&gt;

&lt;h2 id=&#34;io9で必要になりそうな対応の共有:fadcfdeb71ea9748ae9c4b1460f7e0d2&#34;&gt;iO9で必要になりそうな対応の共有&lt;/h2&gt;

&lt;h3 id=&#34;不具合:fadcfdeb71ea9748ae9c4b1460f7e0d2&#34;&gt;不具合&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ATS対応（HTTP通信がHTTPSに自動的に変換される）&lt;br /&gt;
-&amp;gt; とりあえずはplistの設定で回避するが、最終的には静的コンテンツも含めてhttpsにした方が良いかも&lt;br /&gt;
　参考：&lt;a href=&#34;http://qiita.com/yanayanalte/items/e6d83c12af77fa238a58&#34;&gt;http://qiita.com/yanayanalte/items/e6d83c12af77fa238a58&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;bitcode設定の追加&lt;br /&gt;
-&amp;gt; XCode7からデフォルトでYESになっているのでとりあえずNOに&lt;br /&gt;
　参考：&lt;a href=&#34;http://qiita.com/usagimaru/items/cb19f283db4ac0cd8bd6&#34;&gt;http://qiita.com/usagimaru/items/cb19f283db4ac0cd8bd6&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;カスタムURLスキームによる遷移を使用している場合にあらかじめinfo.plistに記載しておかないとエラーになる&lt;br /&gt;
　参考：&lt;a href=&#34;http://qiita.com/Night___/items/60355d21951cffbef51b&#34;&gt;http://qiita.com/Night___/items/60355d21951cffbef51b&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;バックグラウンドでの位置情報取得についての変更&lt;br /&gt;
-&amp;gt; iOS 9からは CLLocationManager にallowsBackgroundLocationUpdates: Bool というプロパティが追加され、
これを YES にしないとバックグラウンドで位置情報を取得できないとのこと。デフォルトではNO。&lt;br /&gt;
　参考：&lt;a href=&#34;http://blog.koogawa.com/entry/2015/07/02/165656&#34;&gt;http://blog.koogawa.com/entry/2015/07/02/165656&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;新機能-すこし調査したので追記:fadcfdeb71ea9748ae9c4b1460f7e0d2&#34;&gt;新機能（すこし調査したので追記）&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Search API
-&amp;gt; SpotlightやSafari検索に出るので、コンテンツのエンゲージメントや見つけてもらいやすさ向上&lt;br /&gt;
　参考：&lt;a href=&#34;http://qiita.com/mono0926/items/27af791065ed919255e0&#34;&gt;http://qiita.com/mono0926/items/27af791065ed919255e0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Universal Links
-&amp;gt; iOS 8までのカスタムURLスキーム(player-ookami://some-contentなど)のようなアプリ起動専用のURLが不要でWeb URL1つに統一されるらしい&lt;br /&gt;
-&amp;gt; ブラウザ等で閲覧するコンテンツがある場合にUXの向上（アプリで開くなどが不要に）&lt;br /&gt;
　参考：&lt;a href=&#34;http://qiita.com/mono0926/items/2bf651246714f20df626&#34;&gt;http://qiita.com/mono0926/items/2bf651246714f20df626&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;その他-おそらくios9による問題ではない:fadcfdeb71ea9748ae9c4b1460f7e0d2&#34;&gt;その他（おそらくiOS9による問題ではない）&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;viewDidLayoutSubviewsの呼び出されるタイミングが変わってる？（おそらくiOS9からの問題ではなく、新たにAutoLayoutを使用したことによるものでは？）&lt;br /&gt;
-&amp;gt; AutoLayout使用時のviewのframeはviewWillApearでは決定されておらず、viewDidLayoutSubviewsの中では決定されている。&lt;br /&gt;
　参考：&lt;a href=&#34;http://blog.xranker.info/blog/2014/01/27/autolayout/&#34;&gt;http://blog.xranker.info/blog/2014/01/27/autolayout/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;開発中のapple-watchアプリの紹介:fadcfdeb71ea9748ae9c4b1460f7e0d2&#34;&gt;開発中のApple Watchアプリの紹介&lt;/h2&gt;

&lt;p&gt;社内出欠登録アプリのwatch版&lt;/p&gt;

&lt;h3 id=&#34;機能:fadcfdeb71ea9748ae9c4b1460f7e0d2&#34;&gt;機能&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;iPhoneアプリに実装されているBLEでの出席登録のNotificationのカスタマイズ&lt;br /&gt;
-&amp;gt; WatchOS2版では単独で登録も行えるようにする予定だったが（CoreLocationが使えるということだったので）&lt;br /&gt;
 Developer Forumsなどを見たところ、どうもiBeaconの監視はできないらしい（it is limited to CLRegion &amp;amp; location updates only）&lt;br /&gt;
 　参考：&lt;a href=&#34;https://forums.developer.apple.com/message/5744&#34;&gt;https://forums.developer.apple.com/message/5744&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チーム出欠状況のサーバからの参照
-&amp;gt; iPhone経由でサーバからの情報を取得し、Page-Based Navigation形式で表示&lt;/li&gt;
&lt;li&gt;遅刻、休暇などの出欠ステータス登録
-&amp;gt; サーバ側のAPIが出社済みしかないようなので側だけ実装&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;開発tips-watchkit-os1-での開発:fadcfdeb71ea9748ae9c4b1460f7e0d2&#34;&gt;開発Tips（ WatchKit（OS1）での開発）&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;watch appビルド時の本体アプリのデバッグについて&lt;br /&gt;
-&amp;gt; WatchKitアプリのシュミレータ実行中に親のiPhoneアプリのprintなどのデバッグログがコンソールに表示されない&lt;br /&gt;
表示する方法&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;WatchAppのRun実行後、XcodeメニューのDebug &amp;gt; Attach to Process &amp;gt; （Likely TargetのYOUR iOS App) を選択&lt;/li&gt;
&lt;li&gt;ブレークポイントをクリックして出てくる吹き出し中のActionにLog Message、Debugger Commandを指定して表示することができる&lt;br /&gt;
　参考：&lt;a href=&#34;https://realm.io/jp/news/more-watchkit-mistakes/&#34;&gt;https://realm.io/jp/news/more-watchkit-mistakes/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ローカル通知のiOSによるiPhone/watchの振り分けについて&lt;br /&gt;
-&amp;gt; Notificationの通知はiOSがiPhoneの状態によって判断して表示
-&amp;gt; 高柳くんに後ほど以前調べた調査結果を共有してもらう&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;不具合-1:fadcfdeb71ea9748ae9c4b1460f7e0d2&#34;&gt;不具合&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;しばらく操作しているとチーム出社状況の表示やローカル通知テスト機能が動かなくなる、、、&lt;br /&gt;
-&amp;gt; 直します&lt;/p&gt;

&lt;h2 id=&#34;realm-6の共有:fadcfdeb71ea9748ae9c4b1460f7e0d2&#34;&gt;Realm#6の共有&lt;/h2&gt;

&lt;p&gt;当日のスライドは以下に&lt;br /&gt;
&lt;a href=&#34;http://realm.connpass.com/event/18692/presentation/?utm_campaign=new_event_links_to_participant&amp;amp;utm_source=notifications&amp;amp;utm_medium=email&amp;amp;utm_content=detail_btn&#34;&gt;http://realm.connpass.com/event/18692/presentation/?utm_campaign=new_event_links_to_participant&amp;amp;utm_source=notifications&amp;amp;utm_medium=email&amp;amp;utm_content=detail_btn&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Wantedlyの杉上さんのSyncというアプリの開発工程についてのお話が特に面白かったです。
分からないところも多かったですが。MVVM設計の実践についてなど。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;次回は3週間後の 9/18（金）に開催予定です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;potatotips#21にブログまとめ枠で参加するので情報共有&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;今回紹介したアプリを使用してみたレビュー結果を共有&lt;br /&gt;
-&amp;gt; UIや機能の検討に既存のアプリを開発者視点でレビューするのは面白いかも&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（高井）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Netcom Developer&#39;s Backing #3のまとめ</title>
      <link>http://takaishota.github.io/DevelopersBacking/post/20150714/</link>
      <pubDate>Mon, 20 Jul 2015 14:21:11 +0900</pubDate>
      
      <guid>http://takaishota.github.io/DevelopersBacking/post/20150714/</guid>
      <description>

&lt;p&gt;7/14（火）にNetcom Developer&amp;rsquo;s Backing #3を行いました。&lt;/p&gt;

&lt;h2 id=&#34;スマフォアプリ開発に役立つツールやクラウドサービスについて-webインテグレーション事業部-高柳さん:97699a4e6807b4db80ec09d7bff2d52e&#34;&gt;スマフォアプリ開発に役立つツールやクラウドサービスについて：Webインテグレーション事業部　高柳さん&lt;/h2&gt;

&lt;p&gt;Webインテグレーション事業部のスマフォアプリ開発チームにおいてどんな環境で開発を行っているかを紹介してもらいました。
また、過去の開発案件や現在進行中のプロジェクトについても紹介していただきました。&lt;/p&gt;

&lt;h3 id=&#34;モバイル端末の実機検証を効率化するサービス:97699a4e6807b4db80ec09d7bff2d52e&#34;&gt;モバイル端末の実機検証を効率化するサービス&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Scirocco Cloud&lt;br /&gt;
クラウドベースのモバイルテストプラットフォームです。&lt;br /&gt;
ブラウザ経由で端末(実機)のリモート操作やテスト実行ができます。&lt;br /&gt;
Androidとβ版（7/20現在）でiOS、Firefox OS、Ubuntu Touchに対応。
&lt;a href=&#34;http://www.scirocco-cloud.com/&#34;&gt;http://www.scirocco-cloud.com/&lt;/a&gt;&lt;br /&gt;
高柳さんのチームでは実際にこちらのクラウドサービスを利用しているそうです。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Smartphone Test Farm&lt;br /&gt;
ブラウザからスマホ実機で検証を行うためのシステムです。&lt;br /&gt;
ブラウザ経由で端末(実機)のリモート操作やテスト実行ができます。
サイバーエジェント社内で利用されいたものですが、最近OSS化されました。
Androidのみ対応。&lt;br /&gt;
&lt;a href=&#34;https://openstf.github.io/&#34;&gt;https://openstf.github.io/&lt;/a&gt;&lt;br /&gt;
※ WBCの社内サーバにも環境が構築されていて試すことができます。&lt;br /&gt;
詳細はWBC小出さんまで。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;AWS Device Farm&lt;br /&gt;
7/14に発表されたモバイルアプリのテストをAWSで行うサービスです。&lt;br /&gt;
用意されたAPIを通じて自動テストを行えるとのこと。&lt;br /&gt;
ブラウザからのリモート操作はできないようです。&lt;br /&gt;
AndroidとFire OSに対応。&lt;br /&gt;
&lt;a href=&#34;http://aws.amazon.com/jp/device-farm/&#34;&gt;http://aws.amazon.com/jp/device-farm/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;その他-スマフォアプリ開発時に使用しているもの:97699a4e6807b4db80ec09d7bff2d52e&#34;&gt;その他、スマフォアプリ開発時に使用しているもの&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;バージョン管理：Github（プライベートリポジトリ）&lt;/li&gt;
&lt;li&gt;テスト自動化ツール：Scirocco Cloud&lt;/li&gt;
&lt;li&gt;CIツール：CircleCI（導入中）&lt;/li&gt;
&lt;li&gt;アプリ配布ツール：Deploy Gate&lt;/li&gt;
&lt;li&gt;コミュニケーションツール：Slack、Skype（顧客による）。Qiita Teamも今後使う予定&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ちなみにデジタルマーケティング事業部では以下のツールを使っています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;バージョン管理：SVN、GitBucket（GitHubクローン）&lt;/li&gt;
&lt;li&gt;CIツール：Jenkins&lt;/li&gt;
&lt;li&gt;アプリ配布ツール：？（TestFlightが使われてる場合があるかも、その他はAdHocでビルドして社内サーバにアップしている）&lt;/li&gt;
&lt;li&gt;コミュニケーションツール：Chat&amp;amp;Messenger（以前はChatWorkなども使われていたが、、）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;watchos-2-samplerを実機に入れてみた-デジタルマーケティング事業部-高井:97699a4e6807b4db80ec09d7bff2d52e&#34;&gt;watchOS-2-Samplerを実機に入れてみた：デジタルマーケティング事業部 高井&lt;/h2&gt;

&lt;p&gt;iOSのSamplerアプリで有名な堤さんのwatchOS-2-Samplerを入れてみました。&lt;br /&gt;
watchOS2で新しく追加されたAPIを使ったサンプルアプリ。
&lt;a href=&#34;https://github.com/shu223/watchOS-2-Sampler&#34;&gt;https://github.com/shu223/watchOS-2-Sampler&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;そのうち、自分でも何か作ってみようと思います。&lt;/p&gt;

&lt;h3 id=&#34;実機にインストールするときにめんどくさかった点:97699a4e6807b4db80ec09d7bff2d52e&#34;&gt;実機にインストールするときにめんどくさかった点&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;iOS9betaをペアリングするiPhoneにインストールしないといけない&lt;/li&gt;
&lt;li&gt;watchOS2とのペアリング時にiPhone側でメッセージアプリとAppleIDの連携を解除しないといけないことがある&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;メッセージアプリにAppleIDをひも付けている場合にペアリング時のプロンプトでパスワードを入力するように求められるが正しいパスワードをいれても認証に失敗するので、設定 &amp;gt; メッセージをOFFにして連携を解除しました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;WatchKit AppとWatchKit Extensionに固有のbundle identifierを設定しないといけない

&lt;ul&gt;
&lt;li&gt;WatchKit App：iOSアプリのbundle identifier+.watchkitapp&lt;/li&gt;
&lt;li&gt;WatchKit Extension：iOSアプリのbundle identifier+.watchkitapp.watchkitextension&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;WatchKit AppとWatchKit Extensionのinfo.plistに親アプリのbundle identifierを設定しないといけない

&lt;ul&gt;
&lt;li&gt;WatchKit App：WKCompanionAppBundleIdentifierにiOSアプリのbundle identifier&lt;/li&gt;
&lt;li&gt;WatchKit Extension：NSExtension &amp;gt; NSExtensionAttributes &amp;gt; WKAppBundleIdentifierにiOSアプリのbundle identifier+.watchkitapp&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;余談ですが、高柳さんのチームではこちらのSampler開発者の堤さんが関わるプロジェクトを進行中らしいです。機会があれば、お話を聞いてみたいです。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;次回は7/24(金)に開催予定です。&lt;/p&gt;

&lt;p&gt;（高井）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>社内勉強会用のブログを作成しました。</title>
      <link>http://takaishota.github.io/DevelopersBacking/post/first-post/</link>
      <pubDate>Thu, 02 Jul 2015 21:30:25 +0900</pubDate>
      
      <guid>http://takaishota.github.io/DevelopersBacking/post/first-post/</guid>
      <description>&lt;p&gt;社内の勉強会用にブログを作成しました。
そのうち、外部の人とも交流を持てる機会にしたいので、とりあえずGithub Pagesで公開してみました。&lt;/p&gt;

&lt;p&gt;勉強会は隔週金曜日の17:30~18:00にラボで開催しています。&lt;/p&gt;

&lt;p&gt;7/3（金）に3回目になります。
3回目は社内の公式のiOSアプリの新規開発にたぶん1番関わっている、高柳くんにiOSの開発環境、プロセスについて情報共有してもらう予定です。&lt;/p&gt;

&lt;p&gt;Netcom Developer&amp;rsquo;s Backing&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時：隔週金曜日 17:30〜18:00&lt;/li&gt;
&lt;li&gt;場所：汐留ラボ&lt;/li&gt;
&lt;li&gt;参加資格：自分で開発をしている若くて穏やかな人。&lt;/li&gt;
&lt;li&gt;内容：開発、デザインについての情報共有。初歩的なことかもしれなくてもOK。
今のところ、iOS関連の話題が中心。&lt;/li&gt;
&lt;li&gt;できるだけゆるい勉強会にする。ただ、原則休みがないようにしてできるだけ継続する。&lt;/li&gt;
&lt;li&gt;毎回、お菓子と飲み物を用意する。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>